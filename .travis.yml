###########################
####### README FIRST! #####
###########################
# This file should only be edited in our main repository (inexor-core)
# You are doing something wrong
# if you are trying to edit this file in the master branch of ci-prebuilds.
#
# Our automation is grabbing the version of this file from our main repository
# and commit it with automatic changes to ci-prebuilds
# and only when Conan dependencies are actually changed
# in order to not cause unnecessary rebuilds.
#
# The ci-prebuilds version will have un-comment every line starting with #CI(followed by an empty space)
# e.g. echo this only gets executed in ci-prebuilds
#
# The ci-prebuilds version will have every line removed containing #CIDELETE
# e.g. #CIDELETE this line is not visible in ci-prebuilds aka. won't get executed
#

notifications:
  email:
    on_success: never
    on_failure: change

git:
  depth: 15

jobs:
  include:
    # We run the following jobs in ci-prebuilds:
    # Our main compilers we run tests for
    - os: osx
      sudo: false
      osx_image: xcode9.2
      language: cpp
      compiler: clang
      env: docker_tag="NODOCKER" compiler=clang TARGET="macos" NIGHTLY="conan"
    - os: linux
      dist: trusty
      sudo: required
      language: cpp
      compiler: clang
      services:
        - docker
      env: CONAN_COMPILER="clang" CONAN_COMPILER_VERSION="5.0" TARGET=linux_clang docker_tag="ubuntu-bionic-clang050" NIGHTLY="conan"
    - os: linux
      dist: trusty
      sudo: required
      language: cpp
      compiler: gcc
      services:
        - docker
      env: CONAN_COMPILER="gcc" CONAN_COMPILER_VERSION="7.2" TARGET=linux_gcc docker_tag="ubuntu-artful-gcc07" NIGHTLY="conan"
    - os: linux
      dist: trusty
      sudo: required
      language: cpp
      compiler: clang
      services:
        - docker
      env: CONAN_COMPILER="clang" CONAN_COMPILER_VERSION="4.0" TARGET=linux_clang docker_tag="ubuntu-artful-clang040" NIGHTLY="conan"
    - os: linux
      dist: trusty
      sudo: required
      language: cpp
      compiler: gcc
      services:
        - docker
      env: CONAN_COMPILER="gcc" CONAN_COMPILER_VERSION="6" TARGET=linux_gcc docker_tag="ubuntu-artful-gcc06" NIGHTLY="conan"
    - os: linux
      dist: trusty
      sudo: required
      language: cpp
      compiler: gcc
      services:
        - docker
      env: CONAN_COMPILER="gcc" CONAN_COMPILER_VERSION="5" TARGET=linux_gcc docker_tag="ubuntu-zesty-gcc054" NIGHTLY="conan"
    - os: linux
      dist: trusty
      sudo: required
      language: cpp
      compiler: clang
      services:
        - docker
      env: CONAN_COMPILER="clang" CONAN_COMPILER_VERSION="3.9" TARGET=linux_clang docker_tag="ubuntu-zesty-clang039" NIGHTLY="conan"
    - os: linux
      dist: trusty
      sudo: required
      language: cpp
      compiler: clang
      services:
        - docker
      env: CONAN_COMPILER="clang" CONAN_COMPILER_VERSION="3.8" TARGET=linux_clang docker_tag="ubuntu-zesty-clang038" NIGHTLY="conan"
  fast_finish: true # don't wait for allow_failures to fail, gives faster response
  allow_failures:
    - os: osx
    - os: linux


before_install:
  # Get our CI Docker image
  - if ! [[ "${docker_tag}" == 'NODOCKER' ]]; then
        sudo docker pull inexorgame/ci-docker':'${docker_tag} ;
    fi

script:
  - if [ "${conan_prebuilds}" == "true" ]; then
      set -e ;
      bash ./tool/travis_conditional_conan_package_generating.sh ;
    else
      echo "${conan_prebuilds}" ;
    fi
  - if [ "${GLOBAL_NIGHTLY}" == "false" ]; then
      NIGHTLY="false";
    fi
  - if [ "${GLOBAL_NIGHTLY}" == "conan" ]; then
      NIGHTLY_USER="${CONAN_USER}";
      NIGHTLY_PASSWORD="${CONAN_PASSWORD}";
    else
      NIGHTLY_USER="${FTP_USER}";
      NIGHTLY_PASSWORD="${FTP_PASSWORD}";
    fi
  - if ! [[ "${docker_tag}" == "NODOCKER" ]]; then
    sudo docker run -v $(pwd)':'/inexor --net=host -it inexorgame/ci-docker':'${docker_tag} /inexor/${RELATIVE_PATH}tool/travis.sh /${RELATIVE_PATH} ${TARGET} ${CONAN_COMPILER} ${CONAN_COMPILER_VERSION} ${TRAVIS_BRANCH} ${TRAVIS_JOB_NUMBER} ${NIGHTLY} ${NIGHTLY_USER} ${NIGHTLY_PASSWORD} ${FTP_DOMAIN} ${TRAVIS_TAG} ${TRAVIS_PULL_REQUEST} ${TRAVIS_REPO_SLUG};
    fi
  - if [ "${TARGET}" == "new_version_tagger" ]; then
        bash ./tool/travis.sh /${RELATIVE_PATH} ${TARGET} ${CONAN_COMPILER} ${CONAN_COMPILER_VERSION} ${TRAVIS_BRANCH} ${TRAVIS_JOB_NUMBER} ${NIGHTLY} ${NIGHTLY_USER} ${NIGHTLY_PASSWORD} ${FTP_DOMAIN} ${TRAVIS_TAG} ${TRAVIS_PULL_REQUEST} ${TRAVIS_REPO_SLUG};
    fi
  - if [ "${TRAVIS_OS_NAME}" == "osx" ]; then
      bash ${RELATIVE_PATH}tool/travis_macos.sh;
    fi


deploy:
  skip_cleanup: true
  provider: releases
  api_key:
    - secure: DgFzibKfjjD4v6zP51sjyP+chyBNKA6D3LHz4+pKN2mSBLSFeqK29z+38TlIOJHSpq6pWdvxqHjn+vQuYV1v/oqri0AVpo0kxFojtNaIFo1Dc/Sfv76V7X6p9+JaSRtKtqCjOV7QP9fftyUgSu1Bq67fwuv6QvDgOzdQIcV87bA=
  file_glob: true
  file: build/cpack/inexor-core-*.zip
  overwrite: true
  on:
    # Deploy only if build was caused by a tag push.
    tags: true
    condition: "$CC = clang"
    repo: inexorgame/inexor-core
